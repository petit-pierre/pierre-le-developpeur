openapi: 3.0.3
info:
  title: Swagger Pierre_le_developpeur - OpenAPI 3.0
  description: |-
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://pierre_le_developpeur.com/api/v0
tags:
  - name: likes
    description: add likes
    externalDocs:
      description: nothing
      url: http://swagger.io
  - name: log_in
    description: Back office log in
  - name: projects
    description: all about projects
  - name: data
    description: all needed data
  - name: contact
    description: modifi contact
  - name: recommendation
    description: modifi reommendation
  - name: slider
    description: modifi slider
  - name: skills
    description: modifi skills
  - name: tools
    description: modifi tools
paths:
  /log_in:
    post:
      tags:
        - log_in
      summary: log_in
      description: log_in
      operationId: log_in
      requestBody:
        description: log_in
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dashboard"
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Login"
        '404':
          description: Data not found
  /likes/{location}:
    put:
      tags:
        - likes
      summary: add one like
      description: add one like
      operationId: add one like
      parameters:
          - in: path
            name: location
            schema:
              type: string
            required: true
            description: Where is this like from ?
      responses:
        '200':
          description: Successful operation
        '404':
          description: database error
  /data:
    get:
      tags:
        - data
      summary: Get all the data
      description: Get all the data
      operationId: getAllData
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Data'

        '404':
          description: Data not found
  /contact:
    put:
      tags:
        - contact
      summary: Modifi contact
      description: modifi contact
      operationId: modifi contact
      requestBody:
        description: modifie Contact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - Bearer: []
  /recommendation:
    put:
      tags:
        - recommendation
      summary: Modifi recommendation
      description: modifi recommendation
      operationId: modifi recommendation
      requestBody:
        description: modifie recommendation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecommendationBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recommendation'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - Bearer: []
  /slider:
    post:
      tags:
        - slider
      summary: add Slide
      description: add Slide
      operationId: add Slide
      requestBody:
        description: add Slide
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SliderBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - Bearer: []
  /slider/{alt}:
    delete:
      tags:
        - slider
      summary: remove Slide
      description: remove Slide
      operationId: remove Slide
      parameters:
          - in: path
            name: alt
            schema:
              type: string
            required: true
            description: Numeric ID of the user to get
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - Bearer: []
  /projects:
    post:
      tags:
        - projects
      summary: add project
      description: add project
      operationId: add project
      requestBody:
        description: add project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - Bearer: []
  /projects/{title}:
    delete:
      tags:
        - projects
      summary: remove project
      description: remove project
      operationId: remove project
      parameters:
          - in: path
            name: title
            schema:
              type: string
            required: true
            description: title of the project
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - Bearer: []
  /skills:
    post:
      tags:
        - skills
      summary: add Skill
      description: add Skill
      operationId: add Skill
      requestBody:
        description: add Skill
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skills'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - Bearer: []
  /skills/{title}:
      delete:
        security:
          - Bearer: []
        tags:
          - skills
        summary: remove Skill
        description: remove Skill
        operationId: remove Skill
        parameters:
          - in: path
            name: title
            schema:
              type: string
            required: true
            description: Numeric ID of the user to get
        responses:
          '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Skills'
          '400':
            description: Invalid input
          '422':
            description: Validation exception
  /tools:
    post:
      tags:
        - tools
      summary: add Tool
      description: add Tool
      operationId: add Tool
      requestBody:
        description: add Tool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tools'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - Bearer: []
  /tools/{title}:
      delete:
        security:
          - Bearer: []
        tags:
          - tools
        summary: remove Tool
        description: remove Tool
        operationId: remove Tool
        parameters:
          - in: path
            name: title
            schema:
              type: string
            required: true
            description: Numeric ID of the user to get
        responses:
          '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Tools'
          '400':
            description: Invalid input
          '422':
            description: Validation exception  
components:
  schemas:
    Data:
      type: array
      items:
          oneOf:
            - $ref: '#/components/schemas/Projects'
            - $ref: '#/components/schemas/Skills'
            - $ref: '#/components/schemas/Tools'
            - $ref: '#/components/schemas/Slider'
            - $ref: '#/components/schemas/Contact'
            - $ref: '#/components/schemas/Recommendation'
    Projects:
      type: array
      items:
        $ref: '#/components/schemas/Project'
    Project:
      type: object
      properties:
          title:
            type: object
            properties:
              french:
                type: string
              english:
                type: string
          category:
            type: string
          date:
            type: string
          tools:
            type: array
            items: 
              properties:
                title:
                  type: string
          description:
            type: object
            properties:
              french:
                type: string
              english:
                type: string
          links:
            type: array
            items:
              properties:
                title:
                  type: string
                url:
                  type: string
                picture:
                  type: string
                  format: binary
                alt:
                  type: string
          slider:
            type: array
            items:
              properties:
                picture:
                  type: string
                alt:
                  type: string
                content:
                  type: object
                  properties:
                    french:
                      type: string
                    english:
                      type: string
          resum:
            type: object
            properties:
              french:
                type: string
              english:
                type: string
          skills:
            type: array
            items:
              properties:
                title:
                  type: string
    ProjectBody:
      type: object
      properties:
          title:
            type: object
            properties:
              french:
                type: string
              english:
                type: string
          category:
            type: string
          date:
            type: string
          tools:
            type: array
            items: 
              properties:
                title:
                  type: string
          description:
            type: object
            properties:
              french:
                type: string
              english:
                type: string
          links:
            type: array
            items:
              properties:
                title:
                  type: string
                url:
                  type: string
                picture:
                  type: string
                  format: binary
                alt:
                  type: string
          slider:
            type: array
            items:
              properties:
                picture:
                  type: string
                alt:
                  type: string
                content:
                  type: object
                  properties:
                    french:
                      type: string
                    english:
                      type: string
          resum:
            type: object
            properties:
              french:
                type: string
              english:
                type: string
          skills:
            type: array
            items:
              properties:
                title:
                  type: string
    Skills:  
      type: array
      items:
        properties:
          picture:
            type: string
          alt:
            type: string
          title:
            type: string
          diplayTitle:
            type: object
            properties:
              french:
                type: string
              english:
                type: string
          likes:
            type: integer
            format: int64
    SkillBody:
      type: object
      properties:
          picture:
            type: string
          alt:
            type: string
          title:
            type: string
          diplayTitle:
            type: object
            properties:
              french:
                type: string
              english:
                type: string
      
    Tools:
      type: array
      items:
        properties:
          picture:
            type: string
          alt:
            type: string
          title:
            type: string
          likes:
            type: integer
            format: int64
    Slider:
      type: array
      items:
        properties:
          alt:
            type: string
          picture:
            type: string
          content:
            type: object
            properties:
              french:
                type: string
              english:
                type: string
    SliderBody:
      type: object
      properties:
        alt:
          type: string
        picture:
          type: string
        content:
          type: object
          properties:
            french:
              type: string
            english:
              type: string
    Contact:
      type: object
      properties:
        content:
          type: object
          properties:
            french:
              type: string
            english:
              type: string
        cv:
          type: object
          properties:
            french:
              type: string
            english:
              type: string
        likes:
            type: integer
            format: int64
    ContactBody:
      type: object
      properties:
        content:
          type: object
          properties:
            french:
              type: string
            english:
              type: string
        cv:
          type: object
          properties:
            french:
              type: string
            english:
              type: string
    Recommendation:
      type: object
      properties:
        french:
          type: string
        english:
          type: string
        likes:
            type: integer
            format: int64
    RecommendationBody:
      type: object
      properties:
        french:
          type: string
        english:
          type: string
    Dashboard:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Login:
      type: object
      properties:
        token:
          type: string
  requestBodies:
    Contact:
      description: modifi contact
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Contact'
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header